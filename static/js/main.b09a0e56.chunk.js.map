{"version":3,"sources":["components/NavBar.js","components/Sort.js","components/SearchBar.js","components/EmployeeCard.js","components/SearchResults.js","utils/API.js","components/Wrapper.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","Sort","props","onClick","sortData","SearchBar","id","type","placeholder","value","onChange","handleInputChange","onSubmit","handleFormSubmit","EmployeeCard","alt","src","data","picture","large","name","first","last","location","city","state","phone","SearchResults","employees","map","person","index","API","search","axios","get","Wrapper","originalData","searchEmployees","then","res","setState","results","catch","err","console","log","event","target","query","toLowerCase","trim","i","length","item","fullName","substring","push","preventDefault","sorted","sort","a","b","aFullName","bFullName","M","AutoInit","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b09a0e56.chunk.js","sourcesContent":["import React from 'react';\n\nfunction NavBar() {\n  return (\n    <nav>\n      <div className='nav-wrapper blue darken-4'>\n        <div className=\"container\">\n          <title className='brand-logo'>Directory</title>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar;","import React from 'react';\r\n\r\nfunction Sort(props) {\r\n  return (\r\n    <div className='input-field'>\r\n      <button\r\n        className='btn-small waves-effect waves-lighten blue darken-4'\r\n        onClick={props.sortData}\r\n      >\r\n        Sort by Name\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sort;","import React from 'react';\r\nimport Sort from '../components/Sort';\r\n\r\nfunction SearchBar(props) {\r\n  return (\r\n    <div className='container'>\r\n      <form>\r\n        <div className='row'>\r\n          <div className='col s6'>\r\n            <div className='input-field'>\r\n              <input\r\n                id='search'\r\n                type='search'\r\n                placeholder='Search by Name'\r\n                value={props.value}\r\n                onChange={props.handleInputChange}\r\n              />\r\n              <input type='submit' onSubmit={props.handleFormSubmit} />\r\n            </div>\r\n          </div>\r\n          <div className='col s6'>\r\n            <Sort sortData={props.sortData}/>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nfunction EmployeeCard(props) {\r\n  return(\r\n    <div className=\"col s12 m6\">\r\n      <div className=\"card blue darken-4\">\r\n        <div className='card-image'>\r\n          <img alt='employee' src={props.data.picture.large} />\r\n        </div>\r\n        <div className=\"card-content white-text\">\r\n          <h5>Name: {props.data.name.first} {props.data.name.last}</h5>\r\n          <p>City: {props.data.location.city}, {props.data.location.state}</p>\r\n          <p>Phone Number: {props.data.phone}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmployeeCard;","import React from 'react';\r\nimport EmployeeCard from './EmployeeCard';\r\n\r\nfunction SearchResults(props) {\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n        {props.employees.map((person, index) => (\r\n          <EmployeeCard data={person} key={index} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResults;","import axios from 'axios';\r\n\r\nconst API = {\r\n  search: function() {\r\n    return axios.get('https://randomuser.me/api/?results=50&nat=us');\r\n  }\r\n}\r\n\r\n// Export an object with a \"search\" method that searches the Giphy API for the passed query\r\nexport default API;","import React, {Component} from 'react';\r\n// Components\r\nimport NavBar from './NavBar';\r\nimport SearchBar from './SearchBar';\r\nimport SearchResults from './SearchResults';\r\n// Materialize\r\nimport M from 'materialize-css';\r\n// API\r\nimport API from '../utils/API';\r\n\r\nclass Wrapper extends Component {\r\n  state = {\r\n    search: \"\",\r\n    originalData: [],\r\n    data: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    M.AutoInit();\r\n    this.searchEmployees();\r\n  }\r\n\r\n  searchEmployees = () => {\r\n    API.search()\r\n      .then(res => this.setState({\r\n        originalData: res.data.results,\r\n        data: res.data.results\r\n      }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    const { value } = event.target;\r\n    let query = value.toLowerCase().trim();\r\n    const originalData = this.state.originalData;\r\n    let results = [];\r\n    for(let i=0; i<originalData.length; i++) {\r\n      let item = originalData[i];\r\n      let fullName = (item.name.first + \" \" + item.name.last).toLowerCase();\r\n      console.log(fullName);\r\n      if(query === fullName.substring(0,query.length)) {\r\n        results.push(item);\r\n      }\r\n    }\r\n    this.setState({\r\n      search: value,\r\n      data: results\r\n    });\r\n  }\r\n\r\n  sortData = event => {\r\n    event.preventDefault();\r\n    let unsorted = this.state.data;\r\n    let sorted = unsorted.sort((a,b) => {\r\n      let aFullName = (a.name.first + a.name.last).toLowerCase().trim();\r\n      let bFullName = (b.name.first + b.name.last).toLowerCase().trim();\r\n      if(aFullName < bFullName) return -1;\r\n      if(aFullName > bFullName) return 1;\r\n      return 0;\r\n    });\r\n    this.setState({\r\n      data: sorted\r\n    })\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <NavBar />\r\n        <SearchBar\r\n          value={this.state.search}\r\n          handleFormSubmit={this.handleFormSubmit}\r\n          handleInputChange={this.handleInputChange}\r\n          sortData={this.sortData}\r\n        />\r\n        <SearchResults employees={this.state.data} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Wrapper;","import React from 'react';\nimport Wrapper from './components/Wrapper';\n\nfunction App() {\n  return <Wrapper />;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'materialize-css/dist/css/materialize.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}